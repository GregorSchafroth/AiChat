generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  clerkUserId  String        @unique
  email        String        @unique
  firstName    String?
  lastName     String?
  imageUrl     String?
  coins        Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  chats        Chat[]
  messages     Message[]
}

model Transaction {
  id        String            @id @default(uuid())
  userId    String
  amount    Int
  type      TransactionType
  status    TransactionStatus
  createdAt DateTime          @default(now())
  user      User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chat {
  id        String    @id @default(uuid())
  userId    String
  title     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
}

model Message {
  id        String      @id @default(uuid())
  chatId    String
  userId    String
  content   String
  role      MessageRole
  coins     Int         @default(1)
  createdAt DateTime    @default(now())
  chat      Chat        @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum TransactionType {
  PURCHASE
  REFUND
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
}

enum MessageRole {
  USER
  ASSISTANT
}
